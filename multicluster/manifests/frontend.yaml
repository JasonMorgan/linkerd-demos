---
apiVersion: v1
kind: Namespace
metadata:
  name: podinfo
  annotations:
    linkerd.io/inject: enabled
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend
  namespace: podinfo
data:
 nginx.conf: |-
  pid /tmp/pid;
  error_log stderr;
  events {}
  http {
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path       /tmp/proxy_temp_path;
    fastcgi_temp_path     /tmp/fastcgi_temp;
    uwsgi_temp_path       /tmp/uwsgi_temp;
    scgi_temp_path        /tmp/scgi_temp;
    server {
      listen 8080;
      set $east "east";
      set $west "west";
      location / {
        proxy_pass http://podinfo-lon:9898;
        proxy_http_version 1.1;
      }
    }
  }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: podinfo
  labels:
    app: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  replicas: 1
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        app: frontend
    spec:
      containers:
        - name: nginx
          image: nginx:alpine
          volumeMounts:
            - name: cfg
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: nginx-conf-d
              mountPath: /etc/nginx/conf.d
            - name: nginx-tmp
              mountPath: /tmp
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
          securityContext:
            runAsUser: 1337
      volumes:
        - name: cfg
          configMap:
            name: frontend
        - name: nginx-conf-d
          emptyDir: {}
        - name: nginx-tmp
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    # mirror.linkerd.io/exported: "true"
  name: frontend
  namespace: podinfo
spec:
  ports:
  - name: service
    port: 8080
  selector:
    app: frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
    kubernetes.io/ingress.class: traefik
    ingress.kubernetes.io/custom-request-headers: l5d-dst-override:frontend.podinfo.svc.cluster.local:8080
  name: frontend
  namespace: podinfo
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: frontend
            port:
              number: 8080
        path: /
        pathType: Prefix